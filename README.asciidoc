kamon-prometheus
================

A Kamon extension that creates a Spray endpoint which Prometheus can use to scrape the metrics generated by Kamon.

_A work in progress…_

Building
--------

Uses sbt, but you will need to have Google’s protocol buffers compiler `protoc` on your path.  On OS X, you should be
able to just `brew install protobuf`.

Development
-----------

=== Adding support for a new Kamon category

To add support to support a new Kamon category, follow these steps:

1. Add a new factory method to link:src/main/scala/com/monsanto/arch/kamon/prometheus/metric/Metric.scala[`Metric`] that
   will generate the new metric.  Be sure to set the `KamonCategory` label appropriately.
2. In link:src/main/scala/com/monsanto/arch/kamon/prometheus/converter/SnapshotConverter.scala[`SnapshotConverter`],
   ensure that the `apply` method will appropriately handle the new category type.
3. Add necessary tests to link:src/test/scala/com/monsanto/arch/kamon/prometheus/converter/SnapshotConverterSpec.scala[`SnapshotConverterSpec`].
   Be sure to test for name munging, help support, etc.
4. Create a new serialisation fixture (see
   link:src/test/scala/com/monsanto/arch/kamon/prometheus/metric/CounterSerialisationFixture.scala[`CounterSerialisationFixture`])
   for the category.
5. Use the serialisation fixture in the tests for each format (currently
   link:src/test/scala/com/monsanto/arch/kamon/prometheus/metric/TextFormatSpec.scala[`TextFormatSpec`] and
   link:src/test/scala/com/monsanto/arch/kamon/prometheus/metric/ProtoBufFormatSpec.scala[`TextFormatSpec`]).
6. Add a generator for metric families of the new category to
   link:src/test/scala/com/monsanto/arch/kamon/prometheus/PrometheusGen.scala[`PrometheusGen`].  Be sure that the
   `snapshot` generator

TODO
----

For initial release:

* Metric types:
** Counters
** Gauges
** Histograms
** Min-max counters
** Traces and trace segments
* Output via endpoint supporting:
** Text representation
** Protocol buffer representation

Further development:

* Support configuration-supplied metric name prefix
* Support getting help strings from tags (configuration-defined)
* Support doing something with units of measurement available within Kamon

Even further out:

* Alternative human-friendly formats
